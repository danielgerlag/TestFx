##teamcity[testSuiteStarted name='TestFx.SpecK.Tests']
##teamcity[testSuiteStarted name='ContextBehaviorTest']
##teamcity[testStarted name='<Default>' captureStandardOutput='false']
##teamcity[testFailed name='<Default>' message='AssertionException' details='Operations:|r|n        subject with ctor arg|r|n        <Action>|r|n        has result set to ctor arg|r|nFAILED  has property set to null (AssertionException)|r|n|r|n|r|nNUnit.Framework.AssertionException:|r|nExpected string to be <null>, but found "ctor arg".|r|n   at FluentAssertions.Execution.LateBoundTestFramework.Throw(String message) in C:\projects\fluentassertions-vf06b\Src\Shared\Execution\LateBoundTestFramework.cs:line 31|r|n   at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message) in C:\projects\fluentassertions-vf06b\Src\FluentAssertions.Net40\Execution\TestFrameworkProvider.cs:line 42|r|n   at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message) in C:\projects\fluentassertions-vf06b\Src\Core\Execution\DefaultAssertionStrategy.cs:line 25|r|n   at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[|] args) in C:\projects\fluentassertions-vf06b\Src\Core\Execution\AssertionScope.cs:line 197|r|n   at FluentAssertions.Primitives.ReferenceTypeAssertions`2.BeNull(String because, Object[|] reasonArgs) in C:\projects\fluentassertions-vf06b\Src\Core\Primitives\ReferenceTypeAssertions.cs:line 33|r|n']
##teamcity[testFinished name='<Default>' duration='xx']
##teamcity[testSuiteFinished name='ContextBehaviorTest']
##teamcity[testSuiteStarted name='FailingTest']
##teamcity[testStarted name='<Default>' captureStandardOutput='false']
##teamcity[testFailed name='<Default>' message='TargetInvocationException' details='Operations:|r|n        Create PassingDisposable|r|nFAILED  Create ThrowingDisposable (TargetInvocationException)|r|n        Dispose PassingDisposable|r|n|r|n|r|nSystem.Reflection.TargetInvocationException:|r|nException has been thrown by the target of an invocation.|r|n---> Exception of type |'System.Exception|' was thrown.|r|n   at System.RuntimeTypeHandle.CreateInstance(RuntimeType type, Boolean publicOnly, Boolean noCheck, Boolean& canBeCached, RuntimeMethodHandleInternal& ctor, Boolean& bNeedSecurityCheck)|r|n   at System.RuntimeType.CreateInstanceSlow(Boolean publicOnly, Boolean skipCheckThis, Boolean fillCache, StackCrawlMark& stackMark)|r|n   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean skipCheckThis, Boolean fillCache, StackCrawlMark& stackMark)|r|n   at System.Activator.CreateInstance(Type type, Boolean nonPublic)|r|n   at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[|] args, CultureInfo culture, Object[|] activationAttributes, StackCrawlMark& stackMark)|r|n   at System.Activator.CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[|] args, CultureInfo culture, Object[|] activationAttributes)|r|n   at System.Activator.CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[|] args, CultureInfo culture)|r|n|r|n--- Begin of inner exception stack trace ---|r|n']
##teamcity[testFinished name='<Default>' duration='xx']
##teamcity[testSuiteFinished name='FailingTest']
##teamcity[testSuiteStarted name='NestingTest']
##teamcity[testStarted name='<Default>' captureStandardOutput='false']
##teamcity[testFailed name='<Default>' message='Exception' details='Operations:|r|n        Create FirstDisposable|r|n        Create SecondDisposable (named)|r|n        Create DelegateDisposable|r|n        Arrangement|r|n        Create ThirdDisposable|r|n        <Action>|r|nFAILED  Failing Assertion (Exception)|r|n        Dispose ThirdDisposable|r|n        Dispose DelegateDisposable|r|n        Dispose SecondDisposable (named)|r|n        Dispose FirstDisposable|r|n|r|n|r|nSystem.Exception:|r|nException of type |'System.Exception|' was thrown.|r|n']
##teamcity[testFinished name='<Default>' duration='xx']
##teamcity[testSuiteFinished name='NestingTest']
##teamcity[testSuiteStarted name='CustomCreationTest']
##teamcity[testStarted name='<Default>' captureStandardOutput='false']
##teamcity[testFinished name='<Default>' duration='xx']
##teamcity[testSuiteFinished name='CustomCreationTest']
##teamcity[testSuiteStarted name='AdHocCreationTest']
##teamcity[testStarted name='<Default>' captureStandardOutput='false']
##teamcity[testFinished name='<Default>' duration='xx']
##teamcity[testSuiteFinished name='AdHocCreationTest']
##teamcity[testSuiteStarted name='NoDefaultConstructorTest']
##teamcity[testStarted name='<Default>' captureStandardOutput='false']
##teamcity[testFailed name='<Default>' message='EvaluationException' details='Operations:|r|nFAILED  <Create_Subject> (EvaluationException)|r|n|r|n|r|nTestFx.Evaluation.EvaluationException:|r|nMissing default constructor for subject type |'DomainType|'.|r|n']
##teamcity[testFinished name='<Default>' duration='xx']
##teamcity[testSuiteFinished name='NoDefaultConstructorTest']
##teamcity[testSuiteStarted name='MissingArgumentsTest']
##teamcity[testStarted name='<Default>' captureStandardOutput='false']
##teamcity[testFailed name='<Default>' message='EvaluationException' details='Operations:|r|nFAILED  <Create_Subject> (EvaluationException)|r|n|r|n|r|nTestFx.Evaluation.EvaluationException:|r|nMissing constructor arguments for subject type |'DomainType|': firstMissingString, secondMissingString|r|n']
##teamcity[testFinished name='<Default>' duration='xx']
##teamcity[testSuiteFinished name='MissingArgumentsTest']
##teamcity[testSuiteStarted name='DefaultCreationTest']
##teamcity[testStarted name='<Default>' captureStandardOutput='false']
##teamcity[testFinished name='<Default>' duration='xx']
##teamcity[testSuiteFinished name='DefaultCreationTest']
##teamcity[testSuiteStarted name='OrderedAssertionsTest']
##teamcity[testStarted name='<Default>' captureStandardOutput='false']
##teamcity[testFailed name='<Default>' message='ExpectationException' details='Operations:|r|n        <Reset_Instance_Fields>|r|n        <Create_Fakes>|r|n        <Create_Subject>|r|n        <Action>|r|nFAILED  calls in order first and second disposable (ExpectationException)|r|n|r|n|r|nFakeItEasy.ExpectationException:|r|n|r|n|r|n  Assertion failed for the following calls:|r|n    |'System.IDisposable.Dispose()|' repeated at least once|r|n    |'System.IDisposable.Dispose()|' repeated at least once|r|n  The calls where found but not in the correct order among the calls:|r|n    1: System.IDisposable.Dispose()|r|n    2: System.IDisposable.Dispose()|r|n|r|n   at FakeItEasy.Core.OrderedFakeAsserter.ThrowExceptionWhenAssertionFailed(List`1 assertedCalls, CallWriter callWriter, IEnumerable`1 originalCallList)|r|n   at FakeItEasy.Core.OrderedFakeAsserter.AssertWasCalled(Func`2 callPredicate, String callDescription, Func`2 repeatPredicate, String repeatDescription)|r|n   at FakeItEasy.Core.OrderedFakeAsserterFactory.CompositeAsserter.AssertWasCalled(Func`2 callPredicate, String callDescription, Func`2 repeatPredicate, String repeatDescription)|r|n   at FakeItEasy.Configuration.RuleBuilder.MustHaveHappened(Repeated repeatConstraint)|r|n   at FakeItEasy.AssertConfigurationExtensions.MustHaveHappened(IAssertConfiguration configuration)|r|n']
##teamcity[testFinished name='<Default>' duration='xx']
##teamcity[testSuiteFinished name='OrderedAssertionsTest']
##teamcity[testSuiteStarted name='FakeSetupTest']
##teamcity[testStarted name='<Default>' captureStandardOutput='false']
##teamcity[testFinished name='<Default>' duration='xx']
##teamcity[testSuiteFinished name='FakeSetupTest']
##teamcity[testSuiteStarted name='FakeCreationTest']
##teamcity[testStarted name='<Default>' captureStandardOutput='false']
##teamcity[testFinished name='<Default>' duration='xx']
##teamcity[testSuiteFinished name='FakeCreationTest']
##teamcity[testSuiteStarted name='InconclusiveTest']
##teamcity[testStarted name='<Default>' captureStandardOutput='false']
##teamcity[testIgnored name='<Default>' message='']
##teamcity[testSuiteFinished name='InconclusiveTest']
##teamcity[testSuiteStarted name='IsolationTest']
##teamcity[testStarted name='Setting' captureStandardOutput='false']
##teamcity[testFinished name='Setting' duration='xx']
##teamcity[testStarted name='Reusing' captureStandardOutput='false']
##teamcity[testFinished name='Reusing' duration='xx']
##teamcity[testSuiteFinished name='IsolationTest']
##teamcity[testSuiteStarted name='InheritanceTest']
##teamcity[testStarted name='Base case' captureStandardOutput='false']
##teamcity[testFinished name='Base case' duration='xx']
##teamcity[testStarted name='<Default>' captureStandardOutput='false']
##teamcity[testFinished name='<Default>' duration='xx']
##teamcity[testSuiteFinished name='InheritanceTest']
##teamcity[testSuiteStarted name='InheritanceTest']
##teamcity[testStarted name='Base case' captureStandardOutput='false']
##teamcity[testFinished name='Base case' duration='xx']
##teamcity[testStarted name='<Default>' captureStandardOutput='false']
##teamcity[testFailed name='<Default>' message='Exception' details='Operations:|r|n        <Reset_Instance_Fields>|r|n        <Action>|r|nFAILED  Assertion (Exception)|r|n|r|nOutput:|r|nSTD: True|r|nSTD: |r|n|r|n|r|n|r|nSystem.Exception:|r|nException of type |'System.Exception|' was thrown.|r|n']
##teamcity[testFinished name='<Default>' duration='xx']
##teamcity[testStarted name='Additional case' captureStandardOutput='false']
##teamcity[testFinished name='Additional case' duration='xx']
##teamcity[testSuiteFinished name='InheritanceTest']
##teamcity[testSuiteStarted name='VariableTest']
##teamcity[testStarted name='<Default>' captureStandardOutput='false']
##teamcity[testFinished name='<Default>' duration='xx']
##teamcity[testSuiteFinished name='VariableTest']
##teamcity[testSuiteStarted name='FailingTest']
##teamcity[testStarted name='<Default>' captureStandardOutput='false']
##teamcity[testFailed name='<Default>' message='exceptions.Count exceptions thrown' details='Operations:|r|n        <Action>|r|nFAILED  Failing assertion (Exception)|r|n        Passing assertion|r|nFAILED  Another failing assertion (Exception)|r|n|r|n|r|nSystem.Exception:|r|nException of type |'System.Exception|' was thrown.|r|n|r|n|r|nSystem.Exception:|r|nException of type |'System.Exception|' was thrown.|r|n']
##teamcity[testFinished name='<Default>' duration='xx']
##teamcity[testStarted name='Passing' captureStandardOutput='false']
##teamcity[testFinished name='Passing' duration='xx']
##teamcity[testSuiteFinished name='FailingTest']
##teamcity[testSuiteStarted name='HaltingTest']
##teamcity[testStarted name='<Default>' captureStandardOutput='false']
##teamcity[testFailed name='<Default>' message='Exception' details='Operations:|r|nFAILED  Throwing arrangement (Exception)|r|n|r|n|r|nSystem.Exception:|r|nException of type |'System.Exception|' was thrown.|r|n']
##teamcity[testFinished name='<Default>' duration='xx']
##teamcity[testStarted name='Passing' captureStandardOutput='false']
##teamcity[testFinished name='Passing' duration='xx']
##teamcity[testSuiteFinished name='HaltingTest']
##teamcity[testSuiteStarted name='PassingTest.Test']
##teamcity[testStarted name='<Default>' captureStandardOutput='false']
##teamcity[testFinished name='<Default>' duration='xx']
##teamcity[testSuiteFinished name='PassingTest.Test']
##teamcity[testSuiteStarted name='SimpleSetupExecutionTest']
##teamcity[testStarted name='<Default>' captureStandardOutput='false']
##teamcity[testFinished name='<Default>' duration='xx']
##teamcity[testStarted name='Case 2' captureStandardOutput='false']
##teamcity[testFinished name='Case 2' duration='xx']
##teamcity[testSuiteFinished name='SimpleSetupExecutionTest']
##teamcity[testSuiteStarted name='ThrowingSetupExecutionTest']
##teamcity[testFailed name='ThrowingSetupExecutionTest' message='Exception' details='Operations:|r|n        SetupOnceMethod|r|nFAILED  <.cctor>b__12_0 (Exception)|r|n.. InnerOperations ..|r|n        CleanupOnceMethod|r|n|r|n|r|nSystem.Exception:|r|nException of type |'System.Exception|' was thrown.|r|n']
##teamcity[testSuiteFinished name='ThrowingSetupExecutionTest']
##teamcity[testSuiteStarted name='GenericArgumentTest']
##teamcity[testStarted name='Passing' captureStandardOutput='false']
##teamcity[testFinished name='Passing' duration='xx']
##teamcity[testStarted name='Failing Value' captureStandardOutput='false']
##teamcity[testFailed name='Failing Value' message='Exception' details='Operations:|r|n        <Reset_Instance_Fields>|r|n        <Arrangement>|r|n        <Action>|r|nFAILED  Returns x => "two" (Exception)|r|n|r|n|r|nSystem.Exception:|r|nResult must be equal to |'two|' but was |'one|'.|r|n']
##teamcity[testFinished name='Failing Value' duration='xx']
##teamcity[testStarted name='Failing Type' captureStandardOutput='false']
##teamcity[testFailed name='Failing Type' message='Exception' details='Operations:|r|n        <Reset_Instance_Fields>|r|n        <Arrangement>|r|n        <Action>|r|nFAILED  Returns x => "one" (Exception)|r|n|r|n|r|nSystem.Exception:|r|nResult must be equal to |'one|' but was |'1|'.|r|n']
##teamcity[testFinished name='Failing Type' duration='xx']
##teamcity[testSuiteFinished name='GenericArgumentTest']
##teamcity[testSuiteStarted name='AutoCreationTest']
##teamcity[testStarted name='<Default>' captureStandardOutput='false']
##teamcity[testFinished name='<Default>' duration='xx']
##teamcity[testSuiteFinished name='AutoCreationTest']
##teamcity[testSuiteStarted name='AutoCreationTest']
##teamcity[testStarted name='<Default>' captureStandardOutput='false']
##teamcity[testFinished name='<Default>' duration='xx']
##teamcity[testSuiteFinished name='AutoCreationTest']
##teamcity[testSuiteStarted name='UnexpectedExceptionTest']
##teamcity[testStarted name='<Default>' captureStandardOutput='false']
##teamcity[testFailed name='<Default>' message='ArgumentException' details='Operations:|r|n        <Reset_Instance_Fields>|r|n        a message|r|n        an inner exception with message|r|nFAILED  <Action> (ArgumentException)|r|n|r|n|r|nSystem.ArgumentException:|r|nMessage|r|n---> InnerMessage|r|n   at UserNamespace.UserClass.Throw[TException|](String message, Exception innerException) in C:\OSS\TestFx2\src\TestFx.SpecK.Tests\Exceptions\UserClass.cs:line 27|r|n|r|n--- Begin of inner exception stack trace ---|r|n|r|n']
##teamcity[testFinished name='<Default>' duration='xx']
##teamcity[testSuiteFinished name='UnexpectedExceptionTest']
##teamcity[testSuiteStarted name='ExceptionAssertionTest']
##teamcity[testStarted name='<Default>' captureStandardOutput='false']
##teamcity[testFinished name='<Default>' duration='xx']
##teamcity[testStarted name='Wrong exception type' captureStandardOutput='false']
##teamcity[testFailed name='Wrong exception type' message='Exception' details='Operations:|r|n        <Reset_Instance_Fields>|r|n        <Action>|r|nFAILED  Throws InvalidOperationException (Exception)|r|n|r|n|r|nSystem.Exception:|r|nException must be assignable to |'System.InvalidOperationException|' but was |'ArgumentNullException|'.|r|n']
##teamcity[testFinished name='Wrong exception type' duration='xx']
##teamcity[testStarted name='Wrong message' captureStandardOutput='false']
##teamcity[testFailed name='Wrong message' message='Exception' details='Operations:|r|n        <Reset_Instance_Fields>|r|n        <Action>|r|nFAILED  Throws ArgumentException (Exception)|r|n|r|n|r|nSystem.Exception:|r|nException message must be |'Wrong message|' but was |'[NullGuard|] message is null.|r|nParameter name: message|'.|r|n']
##teamcity[testFinished name='Wrong message' duration='xx']
##teamcity[testStarted name='Wrong message provider' captureStandardOutput='false']
##teamcity[testFailed name='Wrong message provider' message='Exception' details='Operations:|r|n        <Reset_Instance_Fields>|r|n        a message|r|n        <Action>|r|nFAILED  Throws ArgumentException (Exception)|r|n|r|n|r|nSystem.Exception:|r|nException message must be |'Wrong message|' but was |'[NullGuard|] innerException is null.|r|nParameter name: innerException|'.|r|n']
##teamcity[testFinished name='Wrong message provider' duration='xx']
##teamcity[testStarted name='Wrong inner exception provider' captureStandardOutput='false']
##teamcity[testFailed name='Wrong inner exception provider' message='Exception' details='Operations:|r|n        <Reset_Instance_Fields>|r|n        a message|r|n        <Action>|r|nFAILED  Throws ArgumentException (Exception)|r|n|r|n|r|nSystem.Exception:|r|nException message must be |'Message|' but was |'[NullGuard|] innerException is null.|r|nParameter name: innerException|'.|r|n']
##teamcity[testFinished name='Wrong inner exception provider' duration='xx']
##teamcity[testStarted name='Custom failing assertion' captureStandardOutput='false']
##teamcity[testFailed name='Custom failing assertion' message='AssertionException' details='Operations:|r|n        <Reset_Instance_Fields>|r|n        <Action>|r|nFAILED  Throws exception with special properties (AssertionException)|r|n|r|n|r|nNUnit.Framework.AssertionException:|r|nExpected object not to be <null>.|r|n   at FluentAssertions.Execution.LateBoundTestFramework.Throw(String message) in C:\projects\fluentassertions-vf06b\Src\Shared\Execution\LateBoundTestFramework.cs:line 31|r|n   at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message) in C:\projects\fluentassertions-vf06b\Src\FluentAssertions.Net40\Execution\TestFrameworkProvider.cs:line 42|r|n   at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message) in C:\projects\fluentassertions-vf06b\Src\Core\Execution\DefaultAssertionStrategy.cs:line 25|r|n   at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[|] args) in C:\projects\fluentassertions-vf06b\Src\Core\Execution\AssertionScope.cs:line 197|r|n   at FluentAssertions.Primitives.ReferenceTypeAssertions`2.NotBeNull(String because, Object[|] reasonArgs) in C:\projects\fluentassertions-vf06b\Src\Core\Primitives\ReferenceTypeAssertions.cs:line 53|r|n']
##teamcity[testFinished name='Custom failing assertion' duration='xx']
##teamcity[testStarted name='Custom passing assertion' captureStandardOutput='false']
##teamcity[testFinished name='Custom passing assertion' duration='xx']
##teamcity[testSuiteFinished name='ExceptionAssertionTest']
##teamcity[testSuiteStarted name='PermutationsTest']
##teamcity[testSuiteStarted name='<Default>']
##teamcity[testStarted name='Object = Object, A = 1, B = 3' captureStandardOutput='false']
##teamcity[testFailed name='Object = Object, A = 1, B = 3' message='AssertionException' details='Operations:|r|n        <Reset_Instance_Fields>|r|n        <Arrangement>|r|n        <Arrangement>|r|n        <Action>|r|nFAILED  returns result (AssertionException)|r|n|r|n|r|nNUnit.Framework.AssertionException:|r|nExpected value to be 5, but found 4.|r|n   at FluentAssertions.Execution.LateBoundTestFramework.Throw(String message) in C:\projects\fluentassertions-vf06b\Src\Shared\Execution\LateBoundTestFramework.cs:line 31|r|n   at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message) in C:\projects\fluentassertions-vf06b\Src\FluentAssertions.Net40\Execution\TestFrameworkProvider.cs:line 42|r|n   at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message) in C:\projects\fluentassertions-vf06b\Src\Core\Execution\DefaultAssertionStrategy.cs:line 25|r|n   at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[|] args) in C:\projects\fluentassertions-vf06b\Src\Core\Execution\AssertionScope.cs:line 197|r|n   at FluentAssertions.Numeric.NumericAssertions`1.Be(T expected, String because, Object[|] reasonArgs) in C:\projects\fluentassertions-vf06b\Src\Core\Numeric\NumericAssertions.cs:line 44|r|n']
##teamcity[testFinished name='Object = Object, A = 1, B = 3' duration='xx']
##teamcity[testStarted name='Object = Object, A = 1, B = 4' captureStandardOutput='false']
##teamcity[testFinished name='Object = Object, A = 1, B = 4' duration='xx']
##teamcity[testStarted name='Object = Object, A = 2, B = 3' captureStandardOutput='false']
##teamcity[testFinished name='Object = Object, A = 2, B = 3' duration='xx']
##teamcity[testStarted name='Object = Object, A = 2, B = 4' captureStandardOutput='false']
##teamcity[testFailed name='Object = Object, A = 2, B = 4' message='AssertionException' details='Operations:|r|n        <Reset_Instance_Fields>|r|n        <Arrangement>|r|n        <Arrangement>|r|n        <Action>|r|nFAILED  returns result (AssertionException)|r|n|r|n|r|nNUnit.Framework.AssertionException:|r|nExpected value to be 5, but found 6.|r|n   at FluentAssertions.Execution.LateBoundTestFramework.Throw(String message) in C:\projects\fluentassertions-vf06b\Src\Shared\Execution\LateBoundTestFramework.cs:line 31|r|n   at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message) in C:\projects\fluentassertions-vf06b\Src\FluentAssertions.Net40\Execution\TestFrameworkProvider.cs:line 42|r|n   at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message) in C:\projects\fluentassertions-vf06b\Src\Core\Execution\DefaultAssertionStrategy.cs:line 25|r|n   at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[|] args) in C:\projects\fluentassertions-vf06b\Src\Core\Execution\AssertionScope.cs:line 197|r|n   at FluentAssertions.Numeric.NumericAssertions`1.Be(T expected, String because, Object[|] reasonArgs) in C:\projects\fluentassertions-vf06b\Src\Core\Numeric\NumericAssertions.cs:line 44|r|n']
##teamcity[testFinished name='Object = Object, A = 2, B = 4' duration='xx']
##teamcity[testSuiteFinished name='<Default>']
##teamcity[testSuiteFinished name='PermutationsTest']
##teamcity[testSuiteStarted name='SequencesTest']
##teamcity[testSuiteStarted name='<Default>']
##teamcity[testStarted name='First sequence' captureStandardOutput='false']
##teamcity[testFinished name='First sequence' duration='xx']
##teamcity[testStarted name='Second sequence' captureStandardOutput='false']
##teamcity[testFailed name='Second sequence' message='AssertionException' details='Operations:|r|n        <Reset_Instance_Fields>|r|n        <Arrangement>|r|n        <Arrangement>|r|n        <Action>|r|nFAILED  returns result (AssertionException)|r|n|r|n|r|nNUnit.Framework.AssertionException:|r|nExpected value to be 6, but found 5.|r|n   at FluentAssertions.Execution.LateBoundTestFramework.Throw(String message) in C:\projects\fluentassertions-vf06b\Src\Shared\Execution\LateBoundTestFramework.cs:line 31|r|n   at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message) in C:\projects\fluentassertions-vf06b\Src\FluentAssertions.Net40\Execution\TestFrameworkProvider.cs:line 42|r|n   at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message) in C:\projects\fluentassertions-vf06b\Src\Core\Execution\DefaultAssertionStrategy.cs:line 25|r|n   at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[|] args) in C:\projects\fluentassertions-vf06b\Src\Core\Execution\AssertionScope.cs:line 197|r|n   at FluentAssertions.Numeric.NumericAssertions`1.Be(T expected, String because, Object[|] reasonArgs) in C:\projects\fluentassertions-vf06b\Src\Core\Numeric\NumericAssertions.cs:line 44|r|n']
##teamcity[testFinished name='Second sequence' duration='xx']
##teamcity[testSuiteFinished name='<Default>']
##teamcity[testSuiteFinished name='SequencesTest']
##teamcity[testSuiteStarted name='AsyncTest']
##teamcity[testStarted name='Action' captureStandardOutput='false']
##teamcity[testFinished name='Action' duration='xx']
##teamcity[testStarted name='Func' captureStandardOutput='false']
##teamcity[testFinished name='Func' duration='xx']
##teamcity[testSuiteFinished name='AsyncTest']
##teamcity[testSuiteFinished name='TestFx.SpecK.Tests']
##teamcity[testSuiteStarted name='TestFx.MSpec.Tests']
##teamcity[testSuiteStarted name='Int32, when calling']
##teamcity[testStarted name='asserts' captureStandardOutput='false']
##teamcity[testFinished name='asserts' duration='xx']
##teamcity[testSuiteFinished name='Int32, when calling']
##teamcity[testSuiteStarted name='Int32, when actioning']
##teamcity[testStarted name='asserts' captureStandardOutput='false']
##teamcity[testFinished name='asserts' duration='xx']
##teamcity[testSuiteFinished name='Int32, when actioning']
##teamcity[testSuiteStarted name='Int32 is great, when adding']
##teamcity[testStarted name='returns three' captureStandardOutput='false']
##teamcity[testFinished name='returns three' duration='xx']
##teamcity[testStarted name='returns four' captureStandardOutput='false']
##teamcity[testFailed name='returns four' message='AssertionException' details='Operations:|r|nFAILED  returns four (AssertionException)|r|n|r|n|r|nNUnit.Framework.AssertionException:|r|nExpected value to be 4, but found 3.|r|n   at FluentAssertions.Execution.LateBoundTestFramework.Throw(String message) in C:\projects\fluentassertions-vf06b\Src\Shared\Execution\LateBoundTestFramework.cs:line 31|r|n   at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message) in C:\projects\fluentassertions-vf06b\Src\FluentAssertions.Net40\Execution\TestFrameworkProvider.cs:line 42|r|n   at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message) in C:\projects\fluentassertions-vf06b\Src\Core\Execution\DefaultAssertionStrategy.cs:line 25|r|n   at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[|] args) in C:\projects\fluentassertions-vf06b\Src\Core\Execution\AssertionScope.cs:line 197|r|n   at FluentAssertions.Numeric.NumericAssertions`1.Be(T expected, String because, Object[|] reasonArgs) in C:\projects\fluentassertions-vf06b\Src\Core\Numeric\NumericAssertions.cs:line 44|r|n--- End of stack trace from previous location where exception was thrown ---|r|n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()|r|n']
##teamcity[testFinished name='returns four' duration='xx']
##teamcity[testSuiteFinished name='Int32 is great, when adding']
##teamcity[testSuiteStarted name='Foo, when subject text only']
##teamcity[testStarted name='dummy' captureStandardOutput='false']
##teamcity[testFinished name='dummy' duration='xx']
##teamcity[testSuiteFinished name='Foo, when subject text only']
##teamcity[testSuiteStarted name='Int32, when subject type only']
##teamcity[testStarted name='dummy' captureStandardOutput='false']
##teamcity[testFinished name='dummy' duration='xx']
##teamcity[testSuiteFinished name='Int32, when subject type only']
##teamcity[testSuiteStarted name='Int32, when actioning']
##teamcity[testFailed name='Int32, when actioning' message='Exception' details='Operations:|r|n        Establish outer_context_base|r|n        Establish outer_context|r|nFAILED  Establish base_context_base (Exception)|r|n.. InnerOperations ..|r|n        Cleanup outer_context|r|n        Cleanup outer_context_base|r|n|r|n|r|nSystem.Exception:|r|nException of type |'System.Exception|' was thrown.|r|n--- End of stack trace from previous location where exception was thrown ---|r|n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()|r|n']
##teamcity[testSuiteFinished name='Int32, when actioning']
##teamcity[testSuiteStarted name='Int32, when inconclusive']
##teamcity[testStarted name='is inconclusive' captureStandardOutput='false']
##teamcity[testIgnored name='is inconclusive' message='']
##teamcity[testSuiteFinished name='Int32, when inconclusive']
##teamcity[testSuiteFinished name='TestFx.MSpec.Tests']
